(()=>{"use strict";var __webpack_modules__={93:()=>{eval('\n;// CONCATENATED MODULE: ./src/components/Card.js\nfunction _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nvar Card = /*#__PURE__*/function () {\n  //инициируем приватные переменные\n  function Card(data, profileId, templateSelector, handleCardClick, handleDeleteCard, handleLikeCard) {\n    _classCallCheck(this, Card);\n    this._id = data._id;\n    this._profileId = profileId;\n    this._cardOwner = data.owner._id;\n    this._isOwner = this._cardOwner === this._profileId;\n    this._name = data.name;\n    this._link = data.link;\n    this._likes = data.likes;\n    this._templateSelector = templateSelector;\n    this._element = this._getTemplate();\n    this._likeButton = this._element.querySelector(".element__like");\n    this._likeCounts = this._element.querySelector(".element__count");\n    this._cardImage = this._element.querySelector(".element__image");\n    this._cardCaption = this._element.querySelector(".element__caption");\n    this._cardTrashcan = this._element.querySelector(".element__trash");\n    this._handleCardClick = handleCardClick;\n    this._handleDeleteCard = handleDeleteCard;\n    this._handleLikeCard = handleLikeCard;\n  }\n\n  //копируем разметку\n  _createClass(Card, [{\n    key: "_getTemplate",\n    value: function _getTemplate() {\n      var _cardElement = this._templateSelector.cloneNode(true);\n      return _cardElement;\n    }\n    //публичный метод создания карточки\n  }, {\n    key: "getCard",\n    value: function getCard() {\n      //навешиваем события\n      this._setEventListeners();\n      //отображаем лайк\n      this._setLikeFlag();\n      //показываем корзину только на наших карточках\n      this._setTrashcan();\n      //присваиваем значения\n      this._cardImage.src = this._link;\n      this._cardImage.alt = this._name;\n      this._cardCaption.textContent = this._name;\n      this._likeCounts.textContent = this._likes.length;\n      //взвращаем готовую карточку\n      return this._element;\n    }\n    //приватный метод навешивания событий\n  }, {\n    key: "_setEventListeners",\n    value: function _setEventListeners() {\n      var _this = this;\n      //клик на мусорке\n      this._cardTrashcan.addEventListener("click", function () {\n        return _this._removeCard();\n      });\n      //клик на сердечке\n      this._likeButton.addEventListener("click", function (event) {\n        return _this._likeCard(event.target);\n      });\n      //клика на карточке\n      this._cardImage.addEventListener("click", function () {\n        _this._handleCardClick(_this._name, _this._link);\n      });\n    }\n    //приватный метод удаления карточки\n  }, {\n    key: "_removeCard",\n    value: function _removeCard() {\n      this._handleDeleteCard(this);\n    }\n    //приватный метод обработки лайка\n  }, {\n    key: "_likeCard",\n    value: function _likeCard() {\n      this._handleLikeCard(this._id, this._likeButton, this._likeCounts);\n    }\n  }, {\n    key: "_setLikeFlag",\n    value: function _setLikeFlag() {\n      var _this2 = this;\n      this._likes.forEach(function (like) {\n        if (like._id === _this2._profileId) {\n          _this2._likeButton.classList.add("element__like_checked");\n        }\n      });\n    }\n  }, {\n    key: "_setTrashcan",\n    value: function _setTrashcan() {\n      if (!this._isOwner) {\n        this._cardTrashcan.classList.add("element__trash_hidden");\n      }\n    }\n  }]);\n  return Card;\n}();\n\n;// CONCATENATED MODULE: ./src/components/Api.js\nfunction Api_typeof(obj) { "@babel/helpers - typeof"; return Api_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, Api_typeof(obj); }\nfunction Api_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction Api_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, Api_toPropertyKey(descriptor.key), descriptor); } }\nfunction Api_createClass(Constructor, protoProps, staticProps) { if (protoProps) Api_defineProperties(Constructor.prototype, protoProps); if (staticProps) Api_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction Api_toPropertyKey(arg) { var key = Api_toPrimitive(arg, "string"); return Api_typeof(key) === "symbol" ? key : String(key); }\nfunction Api_toPrimitive(input, hint) { if (Api_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (Api_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nvar Api = /*#__PURE__*/function () {\n  function Api(config) {\n    Api_classCallCheck(this, Api);\n    this._token = config.token;\n    this._groupId = config.groupId;\n    this._url = config.url;\n    this._cardsPage = "".concat(this._url, "/v1/").concat(this._groupId, "/cards");\n    this._profilePage = "".concat(this._url, "/v1/").concat(this._groupId, "/users/me");\n  }\n  Api_createClass(Api, [{\n    key: "_answer",\n    value: function _answer(res) {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject("\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: ".concat(res.status));\n    }\n  }, {\n    key: "_getResponse",\n    value: function _getResponse(url) {\n      return fetch(url, {\n        headers: {\n          authorization: this._token\n        }\n      });\n    }\n    //Cards methods\n  }, {\n    key: "getInitialCards",\n    value: function getInitialCards() {\n      return this._getResponse(this._cardsPage).then(this._answer);\n    }\n  }, {\n    key: "postNewCard",\n    value: function postNewCard(name, link) {\n      return fetch(this._cardsPage, {\n        method: "POST",\n        headers: {\n          authorization: this._token,\n          "Content-Type": "application/json"\n        },\n        body: JSON.stringify({\n          name: name,\n          link: link\n        })\n      }).then(this._answer);\n    }\n  }, {\n    key: "deleteLike",\n    value: function deleteLike(id) {\n      return fetch("".concat(this._cardsPage, "/").concat(id, "/likes"), {\n        method: "DELETE",\n        headers: {\n          authorization: this._token\n        }\n      }).then(this._answer);\n    }\n  }, {\n    key: "addLike",\n    value: function addLike(id) {\n      return fetch("".concat(this._cardsPage, "/").concat(id, "/likes"), {\n        method: "PUT",\n        headers: {\n          authorization: this._token\n        }\n      }).then(this._answer);\n    }\n  }, {\n    key: "deleteCard",\n    value: function deleteCard(cardId) {\n      return fetch("".concat(this._cardsPage, "/").concat(cardId), {\n        method: "DELETE"\n      }).then(this._answer);\n    }\n    //profile methods\n  }, {\n    key: "getProfileInfo",\n    value: function getProfileInfo() {\n      return this._getResponse(this._profilePage).then(this._answer);\n    }\n  }, {\n    key: "editProfileInfo",\n    value: function editProfileInfo(name, about) {\n      return fetch(this._profilePage, {\n        method: "PATCH",\n        headers: {\n          authorization: this._token,\n          "Content-Type": "application/json"\n        },\n        body: JSON.stringify({\n          name: name,\n          about: about\n        })\n      }).then(this._answer);\n    }\n  }, {\n    key: "editProfileAvatar",\n    value: function editProfileAvatar(url) {\n      return fetch("".concat(this._profilePage, "/avatar"), {\n        method: "PATCH",\n        headers: {\n          authorization: this._token,\n          "Content-Type": "application/json"\n        },\n        body: JSON.stringify({\n          avatar: url\n        })\n      }).then(this._answer);\n    }\n\n    //submit methods\n  }, {\n    key: "confirmSubmit",\n    value: function confirmSubmit(cardId) {\n      return fetch("".concat(this._cardsPage, "/").concat(cardId), {\n        method: "DELETE",\n        headers: {\n          authorization: this._token\n        }\n      }).then(this._answer);\n    }\n  }]);\n  return Api;\n}();\n\n;// CONCATENATED MODULE: ./src/components/Popup.js\nfunction Popup_typeof(obj) { "@babel/helpers - typeof"; return Popup_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, Popup_typeof(obj); }\nfunction Popup_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction Popup_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, Popup_toPropertyKey(descriptor.key), descriptor); } }\nfunction Popup_createClass(Constructor, protoProps, staticProps) { if (protoProps) Popup_defineProperties(Constructor.prototype, protoProps); if (staticProps) Popup_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction Popup_toPropertyKey(arg) { var key = Popup_toPrimitive(arg, "string"); return Popup_typeof(key) === "symbol" ? key : String(key); }\nfunction Popup_toPrimitive(input, hint) { if (Popup_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (Popup_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nvar Popup = /*#__PURE__*/function () {\n  function Popup(popupElement) {\n    Popup_classCallCheck(this, Popup);\n    this._element = popupElement;\n    this._overlay = this._element.querySelector(".popup__overlay");\n    this._closeButton = this._element.querySelector(".close-button");\n    //жесткая привязка функций к контексту\n    //помогает со слушателями событий\n    this._handleEscClose = this._handleEscClose.bind(this);\n    this.close = this.close.bind(this);\n  }\n  //публичный метод открытия попапа\n  Popup_createClass(Popup, [{\n    key: "open",\n    value: function open() {\n      this.setEventListeners();\n      this._element.classList.add("popup_active");\n    }\n    //публичный метод закрытия попапа\n  }, {\n    key: "close",\n    value: function close() {\n      //removing event listeners\n      this._closeButton.removeEventListener("click", this.close);\n      this._overlay.removeEventListener("click", this.close);\n      document.removeEventListener("keydown", this._handleEscClose);\n      this._element.classList.remove("popup_active");\n    }\n    //приватный метод закрытия по нажатии ESC\n  }, {\n    key: "_handleEscClose",\n    value: function _handleEscClose(event) {\n      if (event.key === "Escape") {\n        this.close();\n      }\n    }\n    //публичный метод навешивания слушателей\n  }, {\n    key: "setEventListeners",\n    value: function setEventListeners() {\n      //клик по оверлею\n      this._overlay.addEventListener("click", this.close);\n      //клик по крестику\n      this._closeButton.addEventListener("click", this.close);\n      //нажатие ESC\n      document.addEventListener("keydown", this._handleEscClose);\n    }\n  }]);\n  return Popup;\n}();\n\n;// CONCATENATED MODULE: ./src/components/PopupWithImage.js\nfunction PopupWithImage_typeof(obj) { "@babel/helpers - typeof"; return PopupWithImage_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, PopupWithImage_typeof(obj); }\nfunction PopupWithImage_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction PopupWithImage_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, PopupWithImage_toPropertyKey(descriptor.key), descriptor); } }\nfunction PopupWithImage_createClass(Constructor, protoProps, staticProps) { if (protoProps) PopupWithImage_defineProperties(Constructor.prototype, protoProps); if (staticProps) PopupWithImage_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction PopupWithImage_toPropertyKey(arg) { var key = PopupWithImage_toPrimitive(arg, "string"); return PopupWithImage_typeof(key) === "symbol" ? key : String(key); }\nfunction PopupWithImage_toPrimitive(input, hint) { if (PopupWithImage_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (PopupWithImage_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nfunction _get() { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (PopupWithImage_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar PopupWithImage = /*#__PURE__*/function (_Popup) {\n  _inherits(PopupWithImage, _Popup);\n  var _super = _createSuper(PopupWithImage);\n  function PopupWithImage(imageSource, imageCaption, popupElement) {\n    var _this;\n    PopupWithImage_classCallCheck(this, PopupWithImage);\n    _this = _super.call(this, popupElement);\n    _this._imageSource = imageSource;\n    _this._imageCaption = imageCaption;\n    return _this;\n  }\n  //перезаписанный метод открытия попапа с нужной картинкой и подписью\n  PopupWithImage_createClass(PopupWithImage, [{\n    key: "open",\n    value: function open(name, link) {\n      this._imageSource.src = link;\n      this._imageSource.alt = name;\n      this._imageCaption.textContent = name;\n      _get(_getPrototypeOf(PopupWithImage.prototype), "open", this).call(this);\n    }\n  }]);\n  return PopupWithImage;\n}(Popup);\n\n;// CONCATENATED MODULE: ./src/components/PopupWithForm.js\nfunction PopupWithForm_typeof(obj) { "@babel/helpers - typeof"; return PopupWithForm_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, PopupWithForm_typeof(obj); }\nfunction PopupWithForm_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction PopupWithForm_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, PopupWithForm_toPropertyKey(descriptor.key), descriptor); } }\nfunction PopupWithForm_createClass(Constructor, protoProps, staticProps) { if (protoProps) PopupWithForm_defineProperties(Constructor.prototype, protoProps); if (staticProps) PopupWithForm_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction PopupWithForm_toPropertyKey(arg) { var key = PopupWithForm_toPrimitive(arg, "string"); return PopupWithForm_typeof(key) === "symbol" ? key : String(key); }\nfunction PopupWithForm_toPrimitive(input, hint) { if (PopupWithForm_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (PopupWithForm_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nfunction PopupWithForm_get() { if (typeof Reflect !== "undefined" && Reflect.get) { PopupWithForm_get = Reflect.get.bind(); } else { PopupWithForm_get = function _get(target, property, receiver) { var base = PopupWithForm_superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return PopupWithForm_get.apply(this, arguments); }\nfunction PopupWithForm_superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = PopupWithForm_getPrototypeOf(object); if (object === null) break; } return object; }\nfunction PopupWithForm_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) PopupWithForm_setPrototypeOf(subClass, superClass); }\nfunction PopupWithForm_setPrototypeOf(o, p) { PopupWithForm_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return PopupWithForm_setPrototypeOf(o, p); }\nfunction PopupWithForm_createSuper(Derived) { var hasNativeReflectConstruct = PopupWithForm_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = PopupWithForm_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = PopupWithForm_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return PopupWithForm_possibleConstructorReturn(this, result); }; }\nfunction PopupWithForm_possibleConstructorReturn(self, call) { if (call && (PopupWithForm_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return PopupWithForm_assertThisInitialized(self); }\nfunction PopupWithForm_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\nfunction PopupWithForm_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction PopupWithForm_getPrototypeOf(o) { PopupWithForm_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return PopupWithForm_getPrototypeOf(o); }\n\nvar PopupWithForm = /*#__PURE__*/function (_Popup) {\n  PopupWithForm_inherits(PopupWithForm, _Popup);\n  var _super = PopupWithForm_createSuper(PopupWithForm);\n  function PopupWithForm(_ref, popupElement, inputSelector, formSelector, inactiveButtonClass) {\n    var _this;\n    var submitHandler = _ref.submitHandler;\n    PopupWithForm_classCallCheck(this, PopupWithForm);\n    _this = _super.call(this, popupElement);\n    _this._submitHandler = submitHandler;\n    _this._form = popupElement.querySelector(formSelector);\n    _this._inputList = Array.from(_this._element.querySelectorAll(inputSelector));\n    _this._submitButton = _this._form.querySelector(".popup__button");\n    _this._inactiveButtonClass = inactiveButtonClass;\n    _this._formValues = {};\n    return _this;\n  }\n  //приватный метод собирающий значения полей\n  PopupWithForm_createClass(PopupWithForm, [{\n    key: "_getInputValues",\n    value: function _getInputValues() {\n      var _this2 = this;\n      this._inputList.forEach(function (input) {\n        _this2._formValues[input.name] = input.value;\n      });\n      return this._formValues;\n    }\n    //публичный метод перезаписывающий метод класаа Popup и обрабатывающий submit\n  }, {\n    key: "setEventListeners",\n    value: function setEventListeners() {\n      var _this3 = this;\n      this._form.addEventListener("submit", function (event) {\n        event.preventDefault();\n        //меняем тест кнопки во время загрузки\n        _this3._submitButton.textContent = "Зaгрузка...";\n        //выключаем кнопку\n        _this3._disableButton();\n        _this3._submitHandler(_this3._getInputValues(_this3));\n      }, {\n        once: true\n      });\n      PopupWithForm_get(PopupWithForm_getPrototypeOf(PopupWithForm.prototype), "setEventListeners", this).call(this);\n    }\n    //перезаписанный публичный метод закрытия попапа\n  }, {\n    key: "close",\n    value: function close() {\n      //очистка формы\n      this._form.reset();\n      PopupWithForm_get(PopupWithForm_getPrototypeOf(PopupWithForm.prototype), "close", this).call(this);\n    }\n    //функция замены надписи на кнопке формы\n  }, {\n    key: "changeToOriginalText",\n    value: function changeToOriginalText() {\n      this._enableButton();\n      this._submitButton.textContent = this._submitButton.value;\n    }\n\n    //метод отключения кнопки\n  }, {\n    key: "_disableButton",\n    value: function _disableButton() {\n      this._submitButton.classList.add(this._inactiveButtonClass);\n      this._submitButton.disabled = true;\n    }\n    //метод включения кнопки\n  }, {\n    key: "_enableButton",\n    value: function _enableButton() {\n      this._submitButton.classList.remove(this._inactiveButtonClass);\n      this._submitButton.disabled = false;\n    }\n  }]);\n  return PopupWithForm;\n}(Popup);\n\n;// CONCATENATED MODULE: ./src/components/FormValidator.js\nfunction FormValidator_typeof(obj) { "@babel/helpers - typeof"; return FormValidator_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, FormValidator_typeof(obj); }\nfunction FormValidator_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction FormValidator_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, FormValidator_toPropertyKey(descriptor.key), descriptor); } }\nfunction FormValidator_createClass(Constructor, protoProps, staticProps) { if (protoProps) FormValidator_defineProperties(Constructor.prototype, protoProps); if (staticProps) FormValidator_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction FormValidator_toPropertyKey(arg) { var key = FormValidator_toPrimitive(arg, "string"); return FormValidator_typeof(key) === "symbol" ? key : String(key); }\nfunction FormValidator_toPrimitive(input, hint) { if (FormValidator_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (FormValidator_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nvar FormValidator = /*#__PURE__*/function () {\n  function FormValidator(validationConfig, validationElement) {\n    FormValidator_classCallCheck(this, FormValidator);\n    this._formSelector = validationConfig.formSelector;\n    this._inputSelector = validationConfig.inputSelector;\n    this._submitButtonSelector = validationConfig.submitButtonSelector;\n    this._inactiveButtonClass = validationConfig.inactiveButtonClass;\n    this._inputErrorClass = validationConfig.inputErrorClass;\n    this._errorClass = validationConfig.errorClass;\n    this._validationForm = validationElement.querySelector(this._formSelector);\n    this._submitButton = this._validationForm.querySelector(this._submitButtonSelector);\n    this._inputArray = Array.from(this._validationForm.querySelectorAll(this._inputSelector));\n  }\n  //метод инициации валидации формы\n  FormValidator_createClass(FormValidator, [{\n    key: "enableValidation",\n    value: function enableValidation() {\n      //вешаем события\n      this._setEventListeners();\n    }\n    //метод очистки формы от показанных ошибок при открытии формы\n  }, {\n    key: "clearValidation",\n    value: function clearValidation() {\n      var _this = this;\n      //очищаем форму от предыдущих данных\n      this._validationForm.reset();\n      this._inputArray.forEach(function (_input) {\n        //прячем ошибки\n        _this._hideInputError(_input, _this._getErrorElement(_input));\n      });\n      //изменяем состояние кнопки на соответсвующее\n      this._toggleButtonState();\n    }\n    //метод навешивания слушателей событий\n  }, {\n    key: "_setEventListeners",\n    value: function _setEventListeners() {\n      var _this2 = this;\n      //изменяем состояние кнопки на соответсвующее\n      this._toggleButtonState();\n      //проверяем каждого валидность поля\n      this._inputArray.forEach(function (_input) {\n        _input.addEventListener("input", function () {\n          _this2._checkInputValidity(_input);\n          //изменяем состояние кнопки на соответсвующее\n          _this2._toggleButtonState();\n        });\n      });\n    }\n    //метод проверки валидности поля\n  }, {\n    key: "_hasInvalidInput",\n    value: function _hasInvalidInput() {\n      return this._inputArray.some(function (_input) {\n        return !_input.validity.valid;\n      });\n    }\n    //метод установки активности/неактивности для кнопки\n  }, {\n    key: "_toggleButtonState",\n    value: function _toggleButtonState() {\n      if (this._hasInvalidInput()) {\n        this._disableButton();\n      } else {\n        this._enableButton();\n      }\n    }\n    //метод определяющий показ/скрытие ошибок\n  }, {\n    key: "_checkInputValidity",\n    value: function _checkInputValidity(_input) {\n      if (!_input.validity.valid) {\n        this._showInputError(_input, this._getErrorElement(_input));\n      } else {\n        this._hideInputError(_input, this._getErrorElement(_input));\n      }\n    }\n    //метод показа ошибок\n  }, {\n    key: "_showInputError",\n    value: function _showInputError(_input, _errorElement) {\n      _input.classList.add(this._inputErrorClass);\n      _errorElement.textContent = _input.validationMessage;\n      _errorElement.classList.add(this._errorClass);\n    }\n    //метод скрытия ошибок\n  }, {\n    key: "_hideInputError",\n    value: function _hideInputError(_input, _errorElement) {\n      _input.classList.remove(this._inputErrorClass);\n      _errorElement.textContent = "";\n      _errorElement.classList.remove(this._errorClass);\n    }\n    //метод отключения кнопки\n  }, {\n    key: "_disableButton",\n    value: function _disableButton() {\n      this._submitButton.classList.add(this._inactiveButtonClass);\n      this._submitButton.disabled = true;\n    }\n    //метод включения кнопки\n  }, {\n    key: "_enableButton",\n    value: function _enableButton() {\n      this._submitButton.classList.remove(this._inactiveButtonClass);\n      this._submitButton.disabled = false;\n    }\n    //метод определения места где ошибки показываются\n  }, {\n    key: "_getErrorElement",\n    value: function _getErrorElement(_input) {\n      return this._validationForm.querySelector(".".concat(_input.id, "-error"));\n    }\n  }]);\n  return FormValidator;\n}();\n\n;// CONCATENATED MODULE: ./src/components/UserInfo.js\nfunction UserInfo_typeof(obj) { "@babel/helpers - typeof"; return UserInfo_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, UserInfo_typeof(obj); }\nfunction UserInfo_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction UserInfo_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, UserInfo_toPropertyKey(descriptor.key), descriptor); } }\nfunction UserInfo_createClass(Constructor, protoProps, staticProps) { if (protoProps) UserInfo_defineProperties(Constructor.prototype, protoProps); if (staticProps) UserInfo_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction UserInfo_toPropertyKey(arg) { var key = UserInfo_toPrimitive(arg, "string"); return UserInfo_typeof(key) === "symbol" ? key : String(key); }\nfunction UserInfo_toPrimitive(input, hint) { if (UserInfo_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (UserInfo_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nvar UserInfo = /*#__PURE__*/function () {\n  function UserInfo(_ref, profileApi) {\n    var nameSelector = _ref.nameSelector,\n      infoSelector = _ref.infoSelector,\n      avatarElement = _ref.avatarElement;\n    UserInfo_classCallCheck(this, UserInfo);\n    this._nameSelector = nameSelector;\n    this._infoSelector = infoSelector;\n    this._avatarElement = avatarElement;\n    this._profileApi = profileApi;\n  }\n  //публичный метод возвращает объект с данными пользователя\n  UserInfo_createClass(UserInfo, [{\n    key: "getUserInfo",\n    value: function getUserInfo() {\n      var userData = {\n        name: this._nameSelector.innerHTML,\n        info: this._infoSelector.innerHTML\n      };\n      return userData;\n    }\n    //публичный метод который принимает новые данные пользователя и добавляет их на страницу\n  }, {\n    key: "setUserInfo",\n    value: function setUserInfo(_ref2) {\n      var name = _ref2.name,\n        info = _ref2.info;\n      this._nameSelector.textContent = name;\n      this._infoSelector.textContent = info;\n    }\n  }, {\n    key: "setUserAvatar",\n    value: function setUserAvatar(_ref3) {\n      var avatarUrl = _ref3.avatarUrl;\n      this._avatarElement.src = avatarUrl;\n    }\n  }]);\n  return UserInfo;\n}();\n\n;// CONCATENATED MODULE: ./src/components/Section.js\nfunction Section_typeof(obj) { "@babel/helpers - typeof"; return Section_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, Section_typeof(obj); }\nfunction Section_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction Section_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, Section_toPropertyKey(descriptor.key), descriptor); } }\nfunction Section_createClass(Constructor, protoProps, staticProps) { if (protoProps) Section_defineProperties(Constructor.prototype, protoProps); if (staticProps) Section_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction Section_toPropertyKey(arg) { var key = Section_toPrimitive(arg, "string"); return Section_typeof(key) === "symbol" ? key : String(key); }\nfunction Section_toPrimitive(input, hint) { if (Section_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (Section_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nvar Section = /*#__PURE__*/function () {\n  function Section(_ref, containerSelector) {\n    var renderer = _ref.renderer;\n    Section_classCallCheck(this, Section);\n    this._renderer = renderer;\n    this._container = containerSelector;\n  }\n  //публичный метод, который отвечает за отрисовку всех элементов\n  Section_createClass(Section, [{\n    key: "renderItems",\n    value: function renderItems(items) {\n      var _this = this;\n      this._clear();\n      this._renderedItems = items;\n      this._renderedItems.forEach(function (item) {\n        _this._renderer(item);\n      });\n    }\n    //публичный метод, который принимает DOM-элемент и добавляет его в контейнер\n  }, {\n    key: "addItem",\n    value: function addItem(element, append) {\n      append ? this._container.append(element) : this._container.prepend(element);\n    }\n    //приватный метод, который очищает разметку перед ее отрисовку\n  }, {\n    key: "_clear",\n    value: function _clear() {\n      this._container.innerHTML = "";\n    }\n  }]);\n  return Section;\n}();\n\n;// CONCATENATED MODULE: ./src/utils/constants.js\n//карточки дефолтной начальной загрузки\n//TODO надо удалить\nvar initialCards = [{\n  name: "Архыз",\n  link: "https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg"\n}, {\n  name: "Челябинская область",\n  link: "https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg"\n}, {\n  name: "Иваново",\n  link: "https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg"\n}, {\n  name: "Камчатка",\n  link: "https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg"\n}, {\n  name: "Холмогорский район",\n  link: "https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg"\n}, {\n  name: "Байкал",\n  link: "https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg"\n}];\n//конфигурация валидации формы\nvar validationConfig = {\n  formSelector: ".popup__form",\n  inputSelector: ".popup__input",\n  submitButtonSelector: ".popup__button",\n  inactiveButtonClass: "popup__button_disabled",\n  inputErrorClass: "popup__input_type_error",\n  errorClass: "popup__error_visible"\n};\nvar constants_elements = document.querySelector(".elements__items"); // место вставки карточек\nvar template = document //шаблон карточки\n.querySelector(".template").content.querySelector(".element"); //шаблон карточки\nvar profileName = document.querySelector(".profile__title"); //имя профиля\nvar profileCredentials = document.querySelector(".profile__subtitle"); //описание профиля\nvar profileAvatar = document.querySelector(".profile__avatar"); //аватар профиля\nvar editAvatarPopup = document.querySelector(".popup_edit-avatar"); //попап редактирования профиля\n//TODO fix button and url to popup\nvar editAvatarButton = editAvatarPopup.querySelector(".popup__button"); //кнопка редактирования аватара в попапе редактирования\nvar editAvatarUrl = editAvatarPopup.querySelector(".popup__input_type_url"); //поле ссылки на картинку аватара в попапе редактирования\nvar changeAvatarButton = document.querySelector(".avatar__edit-button"); //кнопка редактирования фотографии в документе\nvar profileEditButton = document.querySelector(".profile__edit-button"); //кнопка редактирования профиля\nvar editPofilePopup = document.querySelector(".popup_edit-profile"); //попап редактирования формы\nvar editProfileName = editPofilePopup.querySelector(".popup__input_type_name"); //поле имени попапа редактирования формы\nvar editProfileCredentials = editPofilePopup.querySelector(".popup__input_type_credentials"); //поле информации попапа редактирования профиля\nvar confirmPopup = document.querySelector(".popup_confirm"); //попап подтверждения удаления карточки\nvar addCardPopup = document.querySelector(".popup_add-card"); //попап добавления карточки\nvar addCardButton = document.querySelector(".profile__add-button"); //кнопка добавления карточки\nvar imagePopup = document.querySelector(".popup_open-image"); //попап открытой карточки\nvar imageSource = imagePopup.querySelector(".popup__image"); //поле ссылки на картинку попапа открытой карточки\nvar imageCaption = imagePopup.querySelector(".popup__caption"); //поле информации о картинке попапа открытой карточки\n\n//конфигурация API для подключения к бэкэнду\nvar connectionConfig = {\n  token: "ec0a3331-3b70-4ae3-9ae6-450b13b2e789",\n  groupId: "cohort-61",\n  url: "https://mesto.nomoreparties.co"\n};\n;// CONCATENATED MODULE: ./src/pages/index.js\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\n\n\n\n\n\n\n//экземпляр ProfileApi для контроля информации пользователя\nvar api = new Api(connectionConfig);\nvar profileId = "";\nvar cardData;\nvar originalButtonText = "";\n\n//функциии валидации форм:\n//валидация редактирования аватара\nvar editAvatarValidation = new FormValidator(validationConfig, editAvatarPopup);\n//валидация редактирования профиля\nvar editProfileValidation = new FormValidator(validationConfig, editPofilePopup);\n//валидация добавление карточки\nvar addCardValidation = new FormValidator(validationConfig, addCardPopup);\n\n//экземпляры классов\n//экземпляр попапа добавления карточки с формой\nvar addPopup = new PopupWithForm({\n  submitHandler: function submitHandler(formData) {\n    api.postNewCard(formData.place, formData.url).finally(function () {\n      addPopup.changeToOriginalText();\n      addPopup.close();\n    }).then(function (result) {\n      renderCards.addItem(createCard(result, profileId), false);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }\n}, addCardPopup, validationConfig.inputSelector, validationConfig.formSelector, validationConfig.inactiveButtonClass);\n//экземпляр попапа редактирования профиля\nvar editPopup = new PopupWithForm({\n  submitHandler: function submitHandler(formData) {\n    api.editProfileInfo(formData.name, formData.credentials).finally(function () {\n      editPopup.changeToOriginalText();\n      editPopup.close();\n    }).then(function (res) {\n      userInfo.setUserInfo({\n        name: res.name,\n        info: res.about\n      });\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }\n}, editPofilePopup, validationConfig.inputSelector, validationConfig.formSelector, validationConfig.inactiveButtonClass);\n//экземпляры попапа с картинкой\nvar popupWithImage = new PopupWithImage(imageSource, imageCaption, imagePopup);\n//экземпляр попапа подтверждения действия\nvar confirmForm = new PopupWithForm({\n  submitHandler: function submitHandler() {\n    api.confirmSubmit(cardData._id).finally(function () {\n      confirmForm.changeToOriginalText();\n      confirmForm.close();\n    }).then(function (response) {\n      cardData._element.remove();\n      return response;\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }\n}, confirmPopup, validationConfig.inputSelector, validationConfig.formSelector, validationConfig.inactiveButtonClass);\n//экземпляр попапа редактирования аватара\nvar editAvatarForm = new PopupWithForm({\n  submitHandler: function submitHandler(data) {\n    api.editProfileAvatar(data.avatar).finally(function () {\n      editAvatarForm.changeToOriginalText();\n      editAvatarForm.close();\n    }).then(function (response) {\n      profileAvatar.src = response.avatar;\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }\n}, editAvatarPopup, validationConfig.inputSelector, validationConfig.formSelector, validationConfig.inactiveButtonClass);\n//экземпляр UserInfo с селекторами профиля\nvar userInfo = new UserInfo({\n  nameSelector: profileName,\n  infoSelector: profileCredentials,\n  avatarElement: profileAvatar\n}, api);\n//экземпляр Секции рендеринга карточек\nvar renderCards = new Section({\n  renderer: function renderer(item) {\n    var cardElement = createCard(item);\n    renderCards.addItem(cardElement, true);\n  }\n}, constants_elements);\n//Функции открытия форм\n//открытие формы добавления карточки\nfunction openAddCardPopup() {\n  addCardValidation.clearValidation();\n  addPopup.open();\n}\n//открытие формы редактирования профиля\nfunction openEditProfilePopup() {\n  //валидируем инпуты\n  editProfileValidation.clearValidation();\n  //получаем данные профиля\n  var getUserInfo = userInfo.getUserInfo();\n  //присваиваем соответвующие значения форме\n  editProfileName.value = getUserInfo.name;\n  editProfileCredentials.value = getUserInfo.info;\n  //открываем экземпляр попапа с формой\n  editPopup.open();\n}\n//открытие формы редактирования аватарки\nfunction openEditAvatarPopup() {\n  editAvatarValidation.clearValidation();\n  //присваиваем полю формы адрес ссылки редактируемого аватару\n  editAvatarUrl.value = profileAvatar.src;\n  //открываем заполненную формц\n  editAvatarForm.open();\n}\n\n//функция всплытия карточки отдельным попапом\nfunction handleCardClick(name, link) {\n  popupWithImage.open(name, link);\n}\n//функция удаления карточки\nfunction handleDeleteCard(data) {\n  cardData = data;\n  confirmForm.open();\n}\n//функция обработки лайка карточки\nfunction handleLikeCard(id, buttonElement, counterElement) {\n  var likeSelector = "element__like_checked";\n  //eсли карточка отмечена\n  if (buttonElement.classList.contains(likeSelector)) {\n    //уберем лайк\n    api.deleteLike(id).then(function (res) {\n      buttonElement.classList.remove(likeSelector);\n      counterElement.textContent = res.likes.length;\n    });\n  } else {\n    //добавим лайк\n    api.addLike(id).then(function (res) {\n      buttonElement.classList.add(likeSelector);\n      counterElement.textContent = res.likes.length;\n    });\n  }\n}\n//функция создания карточки\nfunction createCard(item) {\n  return new Card(item, profileId, template, handleCardClick, handleDeleteCard, handleLikeCard).getCard();\n}\n\n//включаем валидацию форм\neditProfileValidation.enableValidation();\naddCardValidation.enableValidation();\neditAvatarValidation.enableValidation();\n\n//--обработчики событий--\n// нажатие кнопки редактирования профиля\nprofileEditButton.addEventListener("click", openEditProfilePopup);\n//нажатие кнопки добавления карточки\naddCardButton.addEventListener("click", openAddCardPopup);\n//нажатие кнопки редактирования профиля\nchangeAvatarButton.addEventListener("click", openEditAvatarPopup);\n\n//отображаем информацию о пользователе на странице\n//и рендерим карточки\nPromise.all([api.getProfileInfo(), api.getInitialCards()]).then(function (_ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n    profileInfo = _ref2[0],\n    cards = _ref2[1];\n  profileId = profileInfo._id;\n  userInfo.setUserInfo({\n    name: profileInfo.name,\n    info: profileInfo.about\n  });\n  userInfo.setUserAvatar({\n    avatarUrl: profileInfo.avatar\n  });\n  renderCards.renderItems(cards);\n  console.log("cards: ", cards);\n}).catch(function (err) {\n  return console.log(err);\n});\n\n//TODO\n//5.Make the connection window as the reaction to fetch and as a part of API\n//7.Fix avatar css\n//8.Fix new windows css\n//9.Fix likes count css\n//10.Add \'loading...\' to the button//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///93\n')}},__webpack_exports__={};__webpack_modules__[93]()})();